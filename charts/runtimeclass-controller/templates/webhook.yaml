{{- $altNames := list
  ( printf "%s-service" (include "runtimeclass-controller.fullname" .) )
  ( printf "%s-service.%s" (include "runtimeclass-controller.fullname" .) .Release.Namespace ) 
  ( printf "%s-service.%s.svc" (include "runtimeclass-controller.fullname" .) .Release.Namespace )
-}}
{{- $ca := genCA "Runtimeclass Controller CA" 3650 -}}
{{- $cert := genSignedCert ( include "runtimeclass-controller.fullname" . ) nil $altNames 3650 $ca -}}
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: {{ template "runtimeclass-controller.fullname" . }}-certs
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "runtimeclass-controller.fullname" . }}-deployment
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  tls.crt: {{ $cert.Cert | b64enc }}
  tls.key: {{ $cert.Key | b64enc }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ template "runtimeclass-controller.fullname" . }}-webhook
  namespace: {{ .Release.Namespace }}
webhooks:
  - name: {{ template "runtimeclass-controller.fullname" . }}-service.{{ .Release.Namespace }}.svc
    sideEffects: None
    admissionReviewVersions:
      - "v1"
    namespaceSelector:
      matchExpressions:
        - key: {{ .Values.controller.runtimeClassNameKey }}
          operator: Exists
    clientConfig:
      service:
        name: {{ template "runtimeclass-controller.fullname" . }}-service
        namespace: {{ .Release.Namespace }}
        path: "/mutate"
      caBundle: {{ $ca.Cert | b64enc }}
    rules:
      - operations: ["CREATE"]
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["pods", "deployments", "replicasets", "statefulsets", "daemonsets", "jobs", "cronjobs"]
        scope: "Namespaced"
    failurePolicy: Fail